name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Scriptoris v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Changes
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ### Binary Downloads
          Download the appropriate binary for your platform below.
          
          ### Build from Source
          ```bash
          cargo install --git https://github.com/SilentMalachite/Scriptoris --tag v${{ steps.get_version.outputs.VERSION }}
          ```
          
          ### Cargo
          ```bash
          cargo install scriptoris
          ```
        draft: false
        prerelease: false

  build:
    name: Build Release Binaries
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: scriptoris
            asset_name: scriptoris-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: scriptoris
            asset_name: scriptoris-linux-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: scriptoris.exe
            asset_name: scriptoris-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: scriptoris
            asset_name: scriptoris-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: scriptoris
            asset_name: scriptoris-macos-aarch64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Configure cross-compilation
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        echo '[target.aarch64-unknown-linux-gnu]' >> ~/.cargo/config.toml
        echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }} --bin scriptoris

    - name: Strip binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        else
          strip -s target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        fi

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    name: Publish to Crates.io
    needs: [create-release, build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Login to Crates.io
      run: cargo login ${{ secrets.CRATES_IO_TOKEN }}

    - name: Publish mdcore
      run: cargo publish -p mdcore --allow-dirty

    - name: Wait for mdcore to be available
      run: sleep 30

    - name: Publish lsp-plugin
      run: cargo publish -p lsp-plugin --allow-dirty

    - name: Wait for lsp-plugin to be available
      run: sleep 30

    - name: Publish scriptoris
      run: cargo publish -p scriptoris --allow-dirty